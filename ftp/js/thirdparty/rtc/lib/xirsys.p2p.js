'use strict';(function(){$xirsys.class.create({namespace:'p2p',constructor:function(a,b,c,d){this.status=$xirsys.p2p.DISCONNECTED;if(b.video!==undefined)this.rtc.useVideo=(!!b.video);if(b.audio!==undefined)this.rtc.useAudio=(!!b.audio);this.rtc.useDataChannel=(!!b.dataChannels);if(this.rtc.useDataChannel){this.rtc.dataChannelList=b.dataChannels}this.rtc.forceTurn=(!!b.forceTurn);this.rtc.screenshare=(!!b.screenshare);this.rtc.connType=b.connType;this.rtc.localVideo=c;this.rtc.remoteVideo=d;this.url=a||null;if(!!a){$xirsys.api.iceUrl=a+"ice"}console.log('url '+a+' ice: '+$xirsys.api.iceUrl)},inherits:$xirsys.api,fields:{status:null,signal:null,xirsys_opts:{username:null,password:null,domain:null,application:null,room:null,automaticAnswer:true},autoreply:null,rtc:{state:null,sdpConstraints:{'mandatory':{'OfferToReceiveAudio':true,'OfferToReceiveVideo':true}},useVideo:true,useAudio:true,useDataChannel:true,dataChannelList:[],forceTurn:false,screenshare:false,connType:null,localStream:null,remoteStream:null,localVideo:null,remoteVideo:null,dataChannel:null,remoteDataChannel:null,peerConn:null,peer:null,ice:null,participant:null}},methods:{open:function(a,b){if(!!this.signal&&!this.signal.isClosed){this.close()}if(!a){this.error('connect','User credentials should be specified.');return}this.xirsys_opts=a;this.autoreply=!!b;this.xirsys_opts.type=(this.rtc.connType=="pub")?"publish":(this.rtc.connType=="sub")?"subscribe":null;this.signal=new $xirsys.signal(this.url);this.signal.onOpen=(this.onSignalOpen).bind(this);this.signal.onClose=(this.onSignalClose).bind(this);this.signal.onMessage=(this.onSignalMessage).bind(this);this.signal.connect(this.xirsys_opts);return this.signal},close:function(){this.signal.close()},call:function(d){this.rtc.peer=d;this.rtc.participant=$xirsys.p2p.CLIENT;this.status=$xirsys.p2p.CALLING;this.setConstraints();this.doPeerConnection((function(){var a={"optional":[],"mandatory":{"MozDontOfferDataChannel":(!this.rtc.useDataChannel)}};if(webrtcDetectedBrowser==="chrome"){for(var b in a.mandatory){if(b.indexOf("Moz")!=-1){delete a.mandatory[b]}}}a=this.mergeConstraints(a,this.rtc.sdpConstraints);if(this.rtc.useDataChannel){this.rtc.peerConn.ondatachannel=this.onRemoteDataChannel.bind(this);for(var c=0;c<this.rtc.dataChannelList.length;c++){this.doCreateDataChannel(this.rtc.dataChannelList[c])}}this.rtc.peerConn.createOffer((this.setLocalAndSendMessage).bind(this),function(){},a)}).bind(this))},hangUp:function(){if(!!this.rtc.peerConn&&this.rtc.peerConn.signalingState!='closed'){this.rtc.peerConn.close()}},answer:function(a){this.rtc.participant=$xirsys.p2p.PEER;if(!this.status==$xirsys.p2p.CALLING){this.status=$xirsys.p2p.ANSWERING}this.rtc.peer=a;this.setConstraints();this.rtc.peerConn.createAnswer((this.setLocalAndSendMessage).bind(this),function(){})},doCreateDataChannel:function(c){c=c||"channelLabel";this.rtc.dataChannel=this.rtc.peerConn.createDataChannel(c,{});this.rtc.dataChannel.onopen=function(a){var b=this.rtc.dataChannel.onopen.readyState;if(b=="open"){this.onDataChannelOpen()}};this.rtc.dataChannel.onerror=this.onDataChannelError.bind(this);this.rtc.dataChannel.onmessage=this.onDataChannelMessage.bind(this);this.rtc.dataChannel.onopen=this.onDataChannelOpen.bind(this);this.rtc.dataChannel.onclose=this.onDataChannelClose.bind(this)},onRemoteDataChannel:function(a){this.rtc.remoteDataChannel=a.channel;this.rtc.remoteDataChannel.onmessage=this.onRemoteDataChannelMessage.bind(this)},onRemoteDataChannelMessage:function(a){$xirsys.events.getInstance().emit($xirsys.p2p.dataChannelMessage,a.data)},onDataChannel:function(a){var b=new xrtc.DataChannel(channelData.channel,remoteUser);dataChannels.push(b)},onDataChannelError:function(a){$xirsys.events.getInstance().emit($xirsys.p2p.dataChannelError,a)},onDataChannelMessage:function(a){$xirsys.events.getInstance().emit($xirsys.p2p.dataChannelMessage,a.data)},onDataChannelOpen:function(){$xirsys.events.getInstance().emit($xirsys.p2p.dataChannelOpen)},onDataChannelClose:function(){$xirsys.events.getInstance().emit($xirsys.p2p.dataChannelClose)},dataChannelSend:function(a){this.rtc.dataChannel.send(a)},dataChannelClose:function(){this.rtc.dataChannel.close()},onSignalOpen:function(){this.doGetUserMedia()},onSignalClose:function(){},onSignalMessage:function(a){switch(a.data.type){case"ice":this.onIceServers(a.data.ice);break;case"offer":this.rtc.peerConn.setRemoteDescription(new RTCSessionDescription(a.data),function(){},function(){});if(this.xirsys_opts.automaticAnswer===true){this.answer(a.peer,a.data)}$xirsys.events.getInstance().emit($xirsys.p2p.offer,a.peer,a.data);break;case"answer":this.rtc.peerConn.setRemoteDescription(new RTCSessionDescription(a.data),function(){},function(){});$xirsys.events.getInstance().emit($xirsys.p2p.answer);break;case"candidate":this.rtc.peerConn.addIceCandidate(new RTCIceCandidate({sdpMLineIndex:a.data.label,candidate:a.data.candidate}));break;default:$xirsys.events.getInstance().emit($xirsys.signal.message,a);break}},onIceCandidate:function(a){if(a.candidate){var b=a.candidate.candidate.split(" ");if(!(this.rtc.forceTurn&&b[7]!="relay")){this.signal.send('session',{type:'candidate',label:a.candidate.sdpMLineIndex,id:a.candidate.sdpMid,candidate:a.candidate.candidate},this.rtc.peer,this.rtc.connType)}}},onIceServers:function(a){this.rtc.ice=a;var b={"optional":[{"DtlsSrtpKeyAgreement":true}]};if(this.rtc.useDataChannel){b.optional.push({"RtpDataChannels":true})}try{this.rtc.peerConn=new RTCPeerConnection(this.rtc.ice,b);if(this.rtc.useDataChannel){this.rtc.peerConn.ondatachannel=this.onRemoteDataChannel.bind(this)}this.rtc.peerConn.onicecandidate=this.onIceCandidate.bind(this);if(!!this.rtc.localStream){this.rtc.peerConn.addStream(this.rtc.localStream)}this.rtc.peerConn.onaddstream=this.onRemoteStreamAdded.bind(this);this.rtc.peerConn.oniceconnectionstatechange=this.onICEConnectionState.bind(this)}catch(e){this.rtc.onPeerConnectionError()}},onRemoteStreamAdded:function(a){if(!!this.rtc.remoteVideo){attachMediaStream(this.rtc.remoteVideo,a.stream);this.rtc.remoteStream=a.stream}},onICEConnectionState:function(a){if(a.target.iceGatheringState=="connected"||a.target.iceGatheringState=="complete"){this.status=$xirsys.p2p.CONNECTED;$xirsys.events.getInstance().emit($xirsys.p2p.iceConnected)}if(a.target.iceConnectionState=="disconnected"||a.target.iceConnectionState=="closed"||a.target.iceConnectionState=="failed"){this.status=$xirsys.p2p.DISCONNECTED;$xirsys.events.getInstance().emit($xirsys.p2p.iceDisconnected)}},onUserMediaSuccess:function(a){if(!!this.rtc.localVideo&&this.rtc.useVideo){attachMediaStream(this.rtc.localVideo,a);this.rtc.localStream=a}},onUserMediaError:function(){this.error("doGetUserMedia","Could not get user media")},doPeerConnection:function(b){this.getIceServers((function(a){this.signal.send('session',{type:'ice',ice:a},this.rtc.peer,this.rtc.connType);this.onIceServers(a);b()}).bind(this))},onPeerConnectionError:function(){this.error("doPeerConnection","Could not create peer connection")},doGetUserMedia:function(){var a={"audio":this.rtc.useAudio,"video":{"mandatory":{},"optional":[]}};if(this.rtc.screenshare){a.video.mandatory={maxWidth:window.screen.width,maxHeight:window.screen.height,maxFrameRate:3}if(webrtcDetectedBrowser==="chrome"){a.video.mandatory.chromeMediaSource='screen'}else{a.video.mandatory.mediaSource='screen'}a.audio=false}try{if(!this.rtc.useAudio&&!this.rtc.useVideo)return;getUserMedia(a,(this.onUserMediaSuccess).bind(this),(this.onUserMediaError).bind(this))}catch(e){this.onUserMediaError()}},setLocalAndSendMessage:function(a){this.rtc.peerConn.setLocalDescription(a);this.signal.send('session',a,this.rtc.peer,this.rtc.connType)},mergeConstraints:function(a,b){var c=a;for(var d in b.mandatory){c.mandatory[d]=b.mandatory[d]}c.optional.concat(b.optional);return c},setConstraints:function(){this.rtc.sdpConstraints="{'mandatory': {'OfferToReceiveAudio':"+(!!this.rtc.useAudio).toString()+", 'OfferToReceiveVideo':"+(!!this.rtc.useVideo).toString()+" }}"},error:function(a,b){$xirsys.events.getInstance().emit($xirsys.p2p.error,a,b)}},statics:{PEER:"peer",CLIENT:"client",DISCONNECTED:"disconnected",CONNECTED:"connected",CALLING:"calling",ANSWERING:"answering",offer:"p2p.offer",answer:"p2p.answer",error:"p2p.error",iceConnected:"p2p.iceConnected",iceDisconnected:"p2p.iceDisconnected",dataChannelError:"p2p.dataChannelError",dataChannelMessage:"p2p.dataChannelMessage",dataChannelOpen:"p2p.dataChannelOpen",dataChannelClose:"p2p.dataChannelClose",publish:"pub",subscribe:"sub",direct:null}})})();