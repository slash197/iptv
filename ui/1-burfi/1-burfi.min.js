GWareIPTV.UIPrototype.prototype.updateTime = function () {
    $(".header-right .time").html((new Date).niceTime())
}, GWareIPTV.UIPrototype.prototype.updateCalendar = function () {
    $(".header-right .calendar").html((new Date).niceDate())
}, GWareIPTV.UIPrototype.prototype.updateWeather = function (e, t) {
    if (lg("weather > data arrived"), App.settings.access.feature.weather) {
        var i = (new Date).getHours(), r = i < 6 || 21 < i ? "night" : "day";
        $(".weather .city").html(t), $(".weather .degree").html(e.temp_C + " &deg;C / " + e.temp_F + " &deg;F"), $(".weather .icon").html('<img src="artwork/weather/' + r + "/" + e.weatherCode + '.png" />')
    } else $(".weather").remove()
}, GWareIPTV.UIPrototype.prototype.resetPageLayout = function (e, t) {
    lg("ui controller > resetting page layout [onLoad] fullscreen [" + t + "]");
    var i = t ? window.innerHeight : "mobile" === App.user.device.category ? window.innerHeight - 60 : window.innerHeight - 160;
	lg("ui controller2 > resetting page layout [onLoad] fullscreen [" + t + "]");
    $(".header, .footer").css("display", t ? "none" : "block"), $(".main").css("height", i), $(".main").html(e), this.isPlayerPage = this.playerPages.hasValue(this.name), this.setupHoverMenu(t)
}, GWareIPTV.UIPrototype.prototype.setupFrame = function () {
    this.setupMenuFrame({selection: "bg", vertical: !1, type: "text", preType: "icon", perRow: !1})
}, GWareIPTV.UIPrototype.prototype.loadCustomStyles = function () {
    var e = App.hex2rgb(App.settings.style.highlight.primary),
        t = [{selector: "body", style: {"font-size": App.getFontSize()}}, {
            selector: ".item.selected",
            style: {"background-color": App.settings.style.highlight.secondary}
        }, {
            selector: ".selection.selection-bg",
            style: {"background-color": App.settings.style.highlight.primary}
        }, {
            selector: ".selection.selection-border",
            style: {"border-color": App.settings.style.highlight.primary}
        }, {
            selector: ".bg-border.hot-zone .scroller .row .item.active",
            style: {
                "background-color": App.settings.style.highlight.primary,
                "border-color": App.settings.style.highlight.primary
            }
        }, {
            selector: ".epg .programmes .timeline",
            style: {"background-color": App.settings.style.highlight.primary}
        }, {
            selector: ".metro-news-date",
            style: {"background-color": App.settings.style.highlight.primary}
        }, {
            selector: ".hover-menu .btn",
            style: {"background-color": App.settings.style.highlight.primary}
        }, {
            selector: ".progress .bar",
            style: {"background-color": App.settings.style.highlight.primary}
        }, {
            selector: ".ad-placeholder",
            style: {"background-color": App.settings.style.highlight.primary}
        }, {
            selector: ".timebar .line",
            style: {"background-color": App.settings.style.highlight.primary}
        }, {
            selector: ".timebar .cursor",
            style: {"border-bottom": "10px solid " + App.settings.style.highlight.primary}
        }, {
            selector: ".timebar .tick",
            style: {"border-left": "3px solid " + App.settings.style.highlight.primary}
        }, {
            selector: ".progress .handle",
            style: {"background-color": "rgba(" + e.r + ", " + e.g + ", " + e.b + ", 0.5)"}
        }, {selector: ".progress .handle .dot", style: {"background-color": App.settings.style.highlight.primary}}];
    App.injectStyle(t)
}, App.Apps = GWareIPTV.UIBase.Apps, App.EPGh = GWareIPTV.UIBase.EPGh, App.EPGv = GWareIPTV.UIBase.EPGv, App.HomeHOTEL = GWareIPTV.UIBase.HomeHOTEL, App.Home = GWareIPTV.UIBase.Home, App.Home.onLoad = function (e) {
    this.resetPageLayout(e), this.enableMenu("Home"), App.metro._fetch(this.renderMetro.bind(this)), App.ads._load(), this.fromPage = "home"
}, App.Home.renderMetro = function () {
    var i = [], t = [], r = [];
    0 === App.metro.news.length ? ($(".news-holder").remove(), $(".movies-holder").addClass("larger")) : (this.index = 0, this.timerNews = null, this.newsScroller()), App.metro.movies.forEach(function (e) {
        var t = App.util.createCoverIcons({id: e.id, type: "movie", icons: ["purchase", "watch"]});
        i.push({
            //'//'+ App.settings.url.movie + 'images/movies/'+  movie.poster
          //  html: '<img src="' + App.settings.url.image + e.poster + '" />' + t,
            html: '<img src="'+ App.settings.server_location.movie_location + '/images/movies/'+ e.poster +'" />' + t,
            data: {"data-id": e.id, "data-fn": "init", "data-page": "VODDetail"}
        })
    }), App.metro.series.forEach(function (e) {
        t.push({
            html: '<img src="' + App.settings.server_location.serie_location + '/images/series/'+ e.poster + '" />',
            data: {
                "data-id": e.vod_id,
                "data-fn": "init",
                "data-store-id": App.util.getStoreIdBySerieId(e.vod_id),
                "data-page": "SeriesDetail"
            }
        })
    }), App.metro.tv.forEach(function (e) {
        var t = App.util.createCoverIcons({id: e.channel_id, type: "channel", icons: ["purchase"]});
        r.push({

            html: '<img src="' + App.settings.server_location.channel_location + '/images/channels/' + e.channel_image + '" />' + t,
            data: {"data-id": e.channel_id, "data-fn": "init", "data-page": "Channel"}
        })
    }), this.makeZone({rows: [i], selector: ".movies", selection: "border"}), this.makeZone({
        rows: [t],
        selector: ".series",
        selection: "border",
        stretchImages: !0
    }), this.makeZone({
        rows: [r],
        selector: ".channels",
        selection: "border"
    }), i.length || r.length || t.length ? $(".movies-holder img, .series-holder img, .channels-holder img").waitForImages(function () {
        App.showPage()
    }) : App.showPage()
}, App.Home.newsScroller = function () {
    var e = App.metro.news[this.index];
    "" === $(".metro-news-date").html() && $(".metro-news-date").html((new Date).niceDate()), $(".metro-news-image > div").css("background-image", "url("  + App.settings.server_location.base_location + '/images/news/'+  e.image + ")"), $(".metro-news-text > div").html(e.description.limit(256)), this.index = this.index < App.metro.news.length - 1 ? this.index + 1 : 0, this.timerNews = window.setTimeout(this.newsScroller.bind(this), 1e4)
}, App.Home.unload = function () {
    window.clearTimeout(this.timerNews)
}, App.HomePLAYER = GWareIPTV.UIBase.HomePLAYER, App.HomePLAYER.onLoad = function (e) {
    this.resetPageLayout(e), this.enableMenu("Home");
    var t = $(".preview-player-holder").width(), i = (t - 1.777777 * $(".preview-player-holder").height()) / 2;
    $(".preview-player-holder").css({
        "padding-left": i,
        "padding-right": i,
        width: t - 2 * i
    }), App.metro._fetch(this.renderMetro.bind(this)), App.ads._load(), this.fromPage = null
}, App.HomePLAYER.renderMetro = function () {
    var i = [];
    0 === App.metro.news.length ? ($(".news-holder").remove(), $(".movies-holder").addClass("larger")) : (this.index = 0, this.timerNews = null, this.newsScroller()), App.metro.tv.forEach(function (e) {
        var t = App.util.createCoverIcons({id: e.channel_id, type: "channel", icons: ["purchase"]});
        i.push({
            html: '<img src="' + App.settings.url.image + e.channel_image + '" />' + t,
            data: {"data-id": e.channel_id, "data-fn": "init", "data-page": "Channel"}
        })
    }), this.makeZone({
        rows: [i],
        selector: ".channels",
        selection: "border",
        scroller: {width: "auto", height: "100%"}
    }), window.setTimeout(function () {
        this.select($(".channels .row:first-child .item:first-child"))
    }.bind(this), 500), i.length ? $(".channels-holder img").waitForImages(function () {
        App.showPage()
    }) : App.showPage()
}, App.HomePLAYER.channelPreview = function (e) {
    this.channelPreviewLoad(e.id)
}, App.HomePLAYER.newsScroller = function () {
    var e = App.metro.news[this.index];
    "" === $(".metro-news-date").html() && $(".metro-news-date").html((new Date).niceDate()), $(".metro-news-image > div").css("background-image", "url(" + window.location.protocol + App.settings.url.image + e.image + ")"), $(".metro-news-text > div").html(e.description.limit(256)), this.index = this.index < App.metro.news.length - 1 ? this.index + 1 : 0, this.timerNews = window.setTimeout(this.newsScroller.bind(this), 1e4)
}, App.HomePLAYER.unload = function () {
    window.clearTimeout(this.timerNews)
}, App.HomeTV = GWareIPTV.UIBase.HomeTV, App.HomeTV.onLoad = function (e) {
    this.resetPageLayout(e), this.enableMenu("Home"), App.metro._fetch(this.renderMetro.bind(this)), App.ads._load(), this.fromPage = null
}, App.HomeTV.renderMetro = function () {
    var s = [], a = 0, o = 1, n = $(".channels-holder-tv").width() / 4 - 10;
    0 === App.metro.news.length ? ($(".news-holder").remove(), $(".movies-holder").addClass("larger")) : (this.index = 0, this.timerNews = null, this.newsScroller()), App.metro.tv.forEach(function (e) {
        var t, i = App.util.createCoverIcons({id: e.channel_id, type: "channel", icons: ["purchase"]}),
            r = App.epg.getProgrammeByTime(e.channel_id);
        t = '<div class="prog-item"><img src="' + App.settings.url.image + e.channel_image + '" /><span class="channel-name" >' + e.name + '</span><span class="prog-name">' + r.name + '</span><span class="prog-time">' + new Date(1e3 * r.ut_start).niceTime() + " - " + new Date(1e3 * r.ut_end).niceTime() + '</span><div class="progress"><div class="bar" style="width: ' + r.elapsed + '%"></div></div></div>', s[a] || (s[a] = []), s[a].push({
            html: t + i,
            data: {"data-id": e.channel_id, "data-fn": "init", "data-page": "Channel"},
            style: {width: n + "px", height: n + "px"}
        }), 0 === Math.fmod(o, 4) && (a += 1), o++
    }), this.makeZone({
        rows: s,
        selector: ".channels",
        selection: "bg",
        scroller: {width: "100%", height: "auto"}
    }), s.length ? $(".channels-holder img").waitForImages(function () {
        App.showPage()
    }) : App.showPage()
}, App.HomeTV.updateEPGData = function () {
    $(".channels .item").each(function () {
        var e = parseInt($(this).attr("data-id"), 10), t = App.epg.getProgrammeByTime(e);
        $(this).find(".prog-name").html(t.name), $(this).find(".prog-time").html(new Date(1e3 * t.ut_start).niceTime() + " - " + new Date(1e3 * t.ut_end).niceTime()), $(this).find(".progress .bar").css("width", t.elapsed + "%")
    }), lg("epg > home page updated")
}, App.HomeTV.newsScroller = function () {
    var e = App.metro.news[this.index];
    "" === $(".metro-news-date").html() && $(".metro-news-date").html((new Date).niceDate()), $(".metro-news-image > div").css("background-image", "url(" + window.location.protocol + App.settings.url.image + e.image + ")"), $(".metro-news-text > div").html(e.description.limit(256)), this.index = this.index < App.metro.news.length - 1 ? this.index + 1 : 0, this.timerNews = window.setTimeout(this.newsScroller.bind(this), 1e4)
}, App.HomeTV.unload = function () {
    window.clearTimeout(this.timerNews)
}, App.HomeVOD = GWareIPTV.UIBase.HomeVOD, App.HomeVOD.onLoad = function (e) {
    this.resetPageLayout(e), this.enableMenu("Home"), App.metro._fetch(this.renderMetro.bind(this)), App.ads._load(), this.fromPage = null
}, App.HomeVOD.renderMetro = function () {
    var r = [], i = [], s = 0, a = 0, o = $(".movies-holder-tv").width() / 2 - 5;
    0 === App.metro.news.length ? ($(".news-holder").remove(), $(".movies-holder").addClass("larger")) : (this.index = 0, this.timerNews = null, this.newsScroller()), App.metro.movies.forEach(function (e) {
        var t, i = App.util.createCoverIcons({id: e.id, type: "movie", icons: ["purchase", "watch"]});
        t = '<div class="imgBg" style="background-image: url('+ App.settings.server_location.movie_location + '/images/movies/'+ e.backdrop +')"></div><div class="rating">' + App.HomeVOD.rating(e.rating) + '</div><div class="title">' + e.name.limit(25) + "</div>", r[s] || (r[s] = []), r[s].push({
            html: t + i,
            data: {"data-id": e.id, "data-fn": "init", "data-page": "VODDetail"},
            style: {width: o + "px", height: o + "px"}
        }), (a + 1) % 2 == 0 && s++, a++
    }), s = a = 0, App.metro.series.forEach(function (e) {
        var t;
        t = '<div class="imgBg" style="background-image: url(' + App.settings.server_location.serie_location + '/images/series/'+ e.backdrop + ')"></div><div class="rating">' + App.HomeVOD.rating(e.rating) + '</div><div class="title">' + e.name.limit(25) + "</div>", i[s] || (i[s] = []), i[s].push({
            html: t,
            data: {"data-id": e.id, "data-fn": "init", "data-page": "VODDetail"},
            style: {width: o + 5 + "px", height: o + "px"}
        }), (a + 1) % 2 == 0 && s++, a++
    }), this.makeZone({
        rows: r,
        selector: ".vod-movies",
        selection: "bg",
        scroller: {width: "100%", height: "auto"},
        align: "center"
    }), this.makeZone({
        rows: i,
        selector: ".vod-series",
        selection: "bg",
        scroller: {width: "100%", height: "auto"},
        align: "center"
    }), $(".movies-holder-tv img, .series-holder-yv img").waitForImages(function () {
        App.showPage()
    })
}, App.HomeVOD.newsScroller = function () {
    var e = App.metro.news[this.index];
    "" === $(".metro-news-date").html() && $(".metro-news-date").html((new Date).niceDate()), $(".metro-news-image > div").css("background-image", "url(" + window.location.protocol + App.settings.url.image + e.image + ")"), $(".metro-news-text > div").html(e.description.limit(256)), this.index = this.index < App.metro.news.length - 1 ? this.index + 1 : 0, this.timerNews = window.setTimeout(this.newsScroller.bind(this), 1e4)
}, App.HomeVOD.rating = function (e) {
    var t = [];
    for (e = parseFloat(e); 0 < e;) 1 <= e ? (t.push('<span class="ico ico-star"></span>'), e--) : .5 <= e && (t.push('<span class="ico ico-star-half"></span>'), e = 0);
    for (var i = 0; i < 5; i++) t[i] || (t[i] = '<span class="ico ico-star-outline"></span>');
    return t.join("")
}, App.HomeVOD.unload = function () {
    window.clearTimeout(this.timerNews)
}, App.Offline = GWareIPTV.UIBase.Offline, App.Search = GWareIPTV.UIBase.Search, App.User = GWareIPTV.UIBase.User, App.Album = GWareIPTV.UIBase.Album, App.Music = GWareIPTV.UIBase.Music, App.Advertisement = GWareIPTV.UIBase.Advertisement, App.SeriesBrowse = GWareIPTV.UIBase.SeriesBrowse, App.SeriesDetail = GWareIPTV.UIBase.SeriesDetail, App.SeriesPlayer = GWareIPTV.UIBase.SeriesPlayer, App.SeriesStore = GWareIPTV.UIBase.SeriesStore, App.SettingsAbout = GWareIPTV.UIBase.SettingsAbout, App.SettingsCatchupTV = GWareIPTV.UIBase.SettingsCatchupTV, App.SettingsDisclaimer = GWareIPTV.UIBase.SettingsDisclaimer, App.SettingsGeneral = GWareIPTV.UIBase.SettingsGeneral, App.SettingsLanguages = GWareIPTV.UIBase.SettingsLanguages, App.SettingsScreenSaver = GWareIPTV.UIBase.SettingsScreenSaver, App.SettingsSpeedTest = GWareIPTV.UIBase.SettingsSpeedTest, App.SettingsSupport = GWareIPTV.UIBase.SettingsSupport, App.CatchUpHome = GWareIPTV.UIBase.CatchUpHome, App.CatchUp = GWareIPTV.UIBase.CatchUp, App.FavoriteManager = GWareIPTV.UIBase.FavoriteManager, App.Recording = GWareIPTV.UIBase.Recording, App.RecordingPlayer = GWareIPTV.UIBase.RecordingPlayer, App.Channel = GWareIPTV.UIBase.Channel, App.TV = GWareIPTV.UIBase.TV, App.VODBrowse = GWareIPTV.UIBase.VODBrowse, App.VODDetail = GWareIPTV.UIBase.VODDetail, App.VOD = GWareIPTV.UIBase.VOD, App.VODMovie = GWareIPTV.UIBase.VODMovie, App.VODSub = GWareIPTV.UIBase.VODSub, App.VODTrailer = GWareIPTV.UIBase.VODTrailer, App.Youtube = GWareIPTV.UIBase.Youtube, App.YoutubePlayer = GWareIPTV.UIBase.YoutubePlayer;
//# sourceMappingURL=1-burfi.min.js.map